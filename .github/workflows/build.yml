name: Build and push packages

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  validate_label: 
    runs-on: ubuntu-latest
    steps: 
      - name: "Validate label"
        if: | 
          (contains(github.event.pull_request.labels.*.name, 'backend') ||
          contains(github.event.pull_request.labels.*.name, 'frontend') || 
          contains(github.event.pull_request.labels.*.name, 'indexer') || 
          contains(github.event.pull_request.labels.*.name, 'data contract') || 
          contains(github.event.pull_request.labels.*.name, 'design') || 
          contains(github.event.pull_request.labels.*.name, 'documentation')) == false && 
          (github.event_name == 'pull_request' || github.event.pull_request.merged == false)          
        run: exit 1
  test_data_contract:
    needs: validate_label
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: NPM install
        run: cd packages/data-contract && npm install

      - name: Check lint rules
        run: cd packages/data-contract && npm run lint

  test_frontend:
    needs: validate_label
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: NPM install
        run: cd packages/frontend && npm install

      - name: Check lint rules
        run: cd packages/frontend && npm run lint

  test_api:
    needs: validate_label
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # - name: Use Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '20.x'

      # - name: NPM install
      #   run: cd packages/api && npm install

      # - name: Check lint rules
      #   run: cd packages/api && npm run lint

      # - name: Run unit tests
      #   run: cd packages/api && npm run test:unit

      # - name: Migrate DB
      #   run: cd packages/api && POSTGRES_HOST=127.0.0.1 POSTGRES_DB=postgres POSTGRES_USER=postgres POSTGRES_PASS=postgres POSTGRES_DB=postgres npm run db:migrate

      # - name: Run integration tests
      #   run: cd packages/api && POSTGRES_HOST=127.0.0.1 POSTGRES_DB=postgres POSTGRES_USER=postgres POSTGRES_PASS=postgres POSTGRES_DB=postgres npm run test:integration

  build_api:
    runs-on: ubuntu-latest
    needs: validate_label
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: build api
        run: echo "build api!"
  build_indexer:
    needs: validate_label
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: build indexer
        run: echo "build indexer!"
  drop_db:
    runs-on: ubuntu-latest
    needs: [build_api, build_indexer]
    if: (github.event_name != 'pull_request' || github.event.pull_request.merged == true)
    steps:
      - uses: Stockopedia/action-get-changed-files@v1
        id: changes
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          ignore: "**/+(.github)"
          foldersOnly: false 
          format: csv
      - name: Drop database
        if: contains(steps.changes.outputs.changed, 'packages/indexer/')
        run: echo "DROP db"
      - name: "DEBUG"
        run: echo ${{ steps.changes.outputs.changed }}
  deploy:
    runs-on: ubuntu-latest
    needs: [build_api, build_indexer]
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Deploy to the server
        run: echo "deploy!!"
  create_tag:
    runs-on: ubuntu-latest
    needs: [build_api, build_indexer]
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: packages/api
        if: ${{steps.package-version.outputs.current-version}} !== ${{ steps.previoustag.outputs.tag }}
      - name: 'Generate changelog'
        id: changelog
        uses: heinrichreimer/action-github-changelog-generator@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} 
          headerLabel: "# 📑 Changelog"
          breakingLabel: '### 💥 Breaking'
          enhancementLabel: '### 🚀 Enhancements'
          bugsLabel: '### 🐛 Bug fixes'
          deprecatedLabel: '### ⚠️ Deprecations'
          removedLabel: '### 🔥 Removals'
          securityLabel: '### 🛡️ Security'
          issuesLabel: '### 📁 Other issues'
          prLabel: '### 📁 Other pull requests'
          addSections: '{"indexer":{"prefix":"### 🧩 Indexer","labels":["indexer"]},"api":{"prefix":"###📊 API","labels":["api"]},"frontend":{"prefix":"###👨‍💻 frontend","labels":["frontend"]}}'
          issues: true
          issuesWoLabels: true
          pullRequests: true
          prWoLabels: true
          author: true
          unreleased: true
          compareLink: true
          stripGeneratorNotice: true
          verbose: true
      - name: "🖨️ Print changelog to console"
        run: cat CHANGELOG.md
      - name: "📤 Upload changelog"
        uses: actions/upload-artifact@v4
        with:
          name: "Changelog"
          path: CHANGELOG.md
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.package-version.outputs.current-version}}
          name: Release ${{ steps.package-version.outputs.current-version}}
          body: ${{steps.changelog.outputs.changelog}}
